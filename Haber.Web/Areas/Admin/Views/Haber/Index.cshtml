@model IEnumerable<Haber.Model.Haberler>

<h2>Haberler</h2>

<p>
    @Html.ActionLink("Haber Oluştur", "Create")
</p>
<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="deleteModalLabel">Uyarı</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Bu haberi silmek istediğinize emin misiniz?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Hayır</button>
                <a href="" id="modalYes" class="btn btn-danger">Evet</a>
            </div>
        </div>
    </div>
</div>

<section class="panel">
    <div class="panel-body">
        <table class="table table-bordered table-striped mb-none" id="datatable-default">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.HaberBaslik)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.HaberPhoto)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.HaberSirano)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsActive)
                        
                    </th>
                    <th>
                        
                        @Html.DisplayNameFor(model => model.UpdatedAt)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="gradeX">
                        <td>
                            <a href="@Url.Action("Edit", new { id = item.Id })">@Html.DisplayFor(modelItem => item.HaberBaslik)</a>
                        </td>
                        <td>
                            <img src="~/CmsFiles/@item.HaberPhoto" style="width:30px" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HaberSirano)
                        </td>
                        <td>
                            @{
                                if (item.IsActive == true)
                                {
                                    <label for="success" class="btn btn-success">@item.IsActive</label>
                                                               
                                }
                                else
                                {
                                    <label for="success" class="btn btn-danger">@item.IsActive</label>
                                }
                            }

                        </td>
                        <td>
                            
                            @Html.DisplayFor(modelItem => item.UpdatedAt)
                        </td>
                        <td>     
                            <div class="delete-section">
                                @*<a class="delete-link"  href="@Url.Action("Delete", new {id = item.Id})"></a>*@
                                
                                @*<div class="btn btn-primary delete-confirm" style="display:none" data-delete-id="@item.Id"></div>*@
                                <label class="btn btn-danger">
                                    <p> @Html.ActionLink("Sil", "Delete", new { id = item.Id }, new { onclick = "return confirm ('Silmek istediğinize emin misiniz')" })</p>
                                </label>
                            </div>
                           @*<a href="@Url.Action("Delete", new { id = item.Id })">Sil</a>*@
                           
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</section>

<style>
    .delete-section {
        display: inline;
    }
    .badgebox {
        opacity: 0;
    }

        .badgebox + .badge {
            /* Move the check mark away when unchecked */
            text-indent: -999999px;
            /* Makes the badge's width stay the same checked and unchecked */
            width: 27px;
        }

        .badgebox:focus + .badge {
            /* Set something to make the badge looks focused */
            /* This really depends on the application, in my case it was: */
            /* Adding a light border */
            box-shadow: inset 0px 0px 5px;
            /* Taking the difference out of the padding */
        }

        .badgebox:checked + .badge {
            /* Move the check mark back when checked */
            text-indent: 0;
        }
</style>
@section scripts{


    <script type="text/javascript">
        $(document).ready(function () {
            $('#datatable-default').dataTable({
                "language": {
                    "lengthMenu": '<select>' +'<option value="2">2</option>'+ '</select>'
                },
                "bDestroy": true
            });
        });
      //  			    $(document).ready(function () {
      //                      $('#datatable-default').dataTable({
      //                 "language": {
			   //       "lengthMenu": 'Display <select>'+
			   //         '<option value="10">10</option>' +
		    //        '<option value="20">20</option>' +
			   //         '<option value="30">30</option>' +
			   //       '<option value="40">40</option>' +
			   //          '<option value="-1">All</option>' +
			   //           }
      //            } );
			   //} );







    $(function () {
        $("a.delete-link").click(function () {

                var deleteLink = $(this);
                deleteLink.hide();
                var confirmButton = deleteLink.siblings(".delete-confirm");
                confirmButton.show();
                

                var cancelDelete = function () {
                    removeEvents();
                    showDeleteLink();
                };
            
            var deleteItem = function () {
                removeEvents();
                confirmButton.hide();
                $.post(
                    '@Url.Action("Delete")',
                    AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                   .done(function () {
                       var parentRow = deleteLink.parents("tr:first");
                       parentRow.fadeOut('fast', function () {
                           parentRow.remove();
                       });
                   }).fail(function (data) {
                       alert("error");
                   });
                return false;
            };

            var removeEvents = function () {
                confirmButton.off("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).off("keypress", onKeyPress);
            };

            var showDeleteLink = function () {
                confirmButton.hide();
                deleteLink.show();
            };

            var onKeyPress = function (e) {
                //Cancel if escape key pressed
                if (e.which == 27) {
                    cancelDelete();
                }
            };

            confirmButton.on("click", deleteItem);
            $(document).on("click", cancelDelete);
            $(document).on("keypress", onKeyPress);

            return false;
        });

        AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
            return data;
        };
    });
    </script>
    }

